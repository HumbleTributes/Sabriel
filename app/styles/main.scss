// bower:scss
// endbower

/*------------------------------------*\
  PDCTO - Positioning, Display & Box
	Model, Color, Text, Other
\*------------------------------------*/

/*------------------------------------*\
  Variables
\*------------------------------------*/

$red: #AC4133;
$orange: #D36E06;
$gold: #F9E224;

$black: #040E10;
$blue: #002F45;
$turquoise: #10C3C8;

$easeInQuart: cubic-bezier(0.895, 0.03, 0.685, 0.22);
$easeOutQuint: cubic-bezier(0.23, 1, 0.32, 1);

/*------------------------------------*\
  Mixins and Placeholders
\*------------------------------------*/

@mixin bp($point) {
	@if $point == "baby-bear" {
		@media (min-width: 30em) { @content; }
	}
	@else if $point == "mama-bear" {
		@media (min-width: 37.5em) { @content; }
	}
	@else if $point == "papa-bear" {
		@media (min-width: 56.25em) { @content; }
	}
	@else if $point == "grizzly-bear" {
		@media (min-width: 75em)  { @content; }
	}
}

%clearfix:after {
  content: "";
  display: table;
  clear: both;
}

/*------------------------------------*\
  Animations
\*------------------------------------*/

.js {
  .wow {
    visibility: hidden;
  }
}

.animated {
  animation-duration: 1s;
  animation-fill-mode: both;
	animation-timing-function: $easeOutQuint;
}

.fade-in-zoom {
	animation-name: fade-in-zoom;
}

.fade-in-down {
	animation-name: fade-in-down;
}

.fade-in {
	animation-name: fade-in;
}

@keyframes fade-in-zoom {
	from {
		opacity: 0;
		transform: scale3d(0.5, 0.5, 0.5);
	}
	to {
		opacity: 1;
		transform: scale3d(1, 1, 1);
	}
}

@keyframes fade-in-down {
	from {
		opacity: 0;
		transform: translate3d(0, -100%, 0);
	}
	to {
		opacity: 1;
		transform: translate3d(0, 0, 0);
	}
}

@keyframes fade-in {
	from {
		opacity: 0;
	}
	to {
		opacity: 1;
	}
}

@keyframes twinkle {
	from {
		opacity: 0;
	}
	50% {
		opacity: 1;
	}
	to {
		opacity: 0;
	}
}

@keyframes float {
	from {
		transform: translateX(-100%);
	}
	to {
		transform: translateX(calc(100vw + 100%));
	}
}

/*------------------------------------*\
  Code
\*------------------------------------*/

*,
*:before,
*:after {
  box-sizing: inherit;
}

html,
body {
  min-height: 100%;
  overflow-x: hidden;
  width: 100%;
}

html {
  box-sizing: border-box;

  font-family: 'Fondamento', cursive;
  font-size: 100%;
  line-height: 1.4;
  text-align: center;

	background-color: $black;
  color: white;

	@include bp("baby-bear") {
		font-size: 125%;
	}
	@include bp("mama-bear") {
		font-size: 150%;
	}
	@include bp("papa-bear") {
		font-size: 175%;
	}
	@include bp("grizzly-bear") {
		font-size: 180%;
	}
}

body {
  overflow-y: auto;
}

h1,
h2,
h3 {
  line-height: 1;
	margin: 1rem 0;
}

h2,
h3 {
	font-family: 'Tangerine', cursive;
	font-weight: 700;
}

h1 {
	font-family: 'Cinzel', serif;
	font-size: 4em;
	font-weight: 400;
}

h2 {
	font-size: 3em;
}

h3 {
	font-size: 2.5em;
}

blockquote {
	margin: 0;

	font-size: 1.5em;
	font-style: italic;
	font-weight: 700;

	footer {
		font-style: normal;
		font-size: 75%;
	}
	cite {

	}
}



.constrain {
	margin-left: auto;
	margin-right: auto;
	max-width: 27.5em;
}



%box,
.box {
	padding: 1em;

	@include bp("baby-bear") {
		padding: 2em;
	}
	@include bp("mama-bear") {
		padding: 3em;
	}
	@include bp("papa-bear") {
		padding: 4em;
	}
	@include bp("grizzly-bear") {
		padding: 5em;
	}
}

.box--intro {
	@extend %box;

  text-shadow: 1px 1px black;
}

.box--thanks {
	@extend %box;

	display: table;
	min-height: 100vh;
	width: 100%;

	background-image: radial-gradient(circle at 50% 0%, transparent, transparent 70%, rgba($orange, 0.1) 100%);
	background-position: center bottom;
	background-repeat: no-repeat;
	background-size: cover;

	text-shadow: 1px 1px black;

	.box-content {
		display: table-cell;
		vertical-align: middle;
	}
}



.canvas-container {
	position: relative;
}

.canvas-sibling {
	position: relative;
	z-index: 1;
}

.canvas-background {
	position: absolute;
	top: 0;
	left: 0;
	z-index: 0;

	display: block;
	width: 100%;
	height: 100%;

	&:after {
		position: absolute;
		top: 0;
		left: 0;
		z-index: 0;

		display: block;
		width: 100%;
		height: 100%;

		content: "";
	}
}

.holehallow-container {
	position: relative;
	z-index: 0;

	.holehallow {
		position: absolute;
		top: 0;
		left: 0;
		z-index: 0;

		display: block;
		width: 100%;
		height: 100%;
	}

	.holehallow-content {
		position: relative;
		z-index: 1;

		padding-top: 6em;
		padding-bottom: 6em;

		color: $gold;
	}
}

.holehallow {
	background-color: $blue;
	background-image: radial-gradient(circle at 50% 100%, $blue, darken($blue, 5%) 100%);
	background-position: center bottom;
	background-repeat: no-repeat;
	background-size: cover;

	overflow: hidden;

	.sinkhole {
		position: absolute;
		top: 0;
		left: 0;

		display: block;
		width: 100%;
		height: 100%;

		background-image: url(../images/sinkhole-lip.svg);
		background-position: center bottom;
		background-repeat: no-repeat;
		background-size: 110% auto;
	}

	.cloud {
		display: block;
		width: 7em;
		height: 4em;

		position: absolute;
		bottom: 0;
		left: 0;
		transform: translate(-100%, -100%);

		background-image: url(../images/small/cloud.png);
		background-position: center;
		background-repeat: no-repeat;
		background-size: contain;

		animation-name: float;
		animation-delay: 5000ms;
		animation-iteration-count: infinite;
		animation-timing-function: linear;
		animation-fill-mode: both;

		&:nth-child(1) {
			bottom: 10%;

			animation-delay: 5000ms;
			animation-duration: 20000ms;
		}
		&:nth-child(2) {
			bottom: 25%;

			animation-delay: 7000ms;
			animation-duration: 30000ms;
		}
		&:nth-child(3) {
			bottom: 40%;

			animation-delay: 10000ms;
			animation-duration: 40000ms;
		}
		&:nth-child(4) {
			bottom: 55%;

			animation-delay: 8000ms;
			animation-duration: 25000ms;
		}

		.js & {
			animation-play-state: paused;

			&.animated {
				animation-play-state: running;
			}
		}
	}

	.moon {
		display: block;
		width: 2em;
		height: 2em;

		position: absolute;
		top: 25%;
		right: 10%;

		background-image: url(../images/moon.svg);
		background-position: center;
		background-repeat: no-repeat;
		background-size: 100% 100%;

		@include bp("baby-bear") {
			width: 2em;
			height: 2em;
		}
		@include bp("mama-bear") {
			width: 2em;
			height: 2em;
		}
		@include bp("papa-bear") {
			width: 3em;
			height: 3em;
		}
		@include bp("grizzly-bear") {
			width: 4em;
			height: 4em;
		}
	}

	.star {
		display: block;
		border-radius: 50%;

		position: absolute;

		$stars: 500;
		$colours: #002F45, #10C3C8, #6DC7BE, #10DCE3, #C9F0EF;

		@for $i from 1 through $stars {
			&:nth-child(#{$i}) {
				$radius: random(10) / 100;
				$top: percentage(random(100)) / 100;
				$left: percentage(random(100)) / 100;
				$colour: nth($colours, random(length($colours)));
				$finalColour: rgba($colour, random());

				display: block;
				height: #{$radius}em;
				width: #{$radius}em;

				top: $top;
				left: $left;

				background-color: $finalColour;
				box-shadow: 0 0 #{$radius}em $finalColour;

				@if (random() > 0.5) {
					$delay: #{random(3) * 1000}ms;
					$duration: #{random(3) * 2000}ms;

					animation-name: twinkle;
					animation-delay: $delay;
					animation-duration: $duration;
					animation-iteration-count: infinite;
					animation-timing-function: $easeInQuart;
					animation-fill-mode: both;
				}
			}
		}
	}
}
